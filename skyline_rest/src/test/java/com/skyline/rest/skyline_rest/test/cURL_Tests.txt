cURL-tests for the HTTP-calls to the blog-model (via PostBoxResource) 

1.
Getting all posts
curl -v http://localhost:8080/skyline_rest/rs/posts
//OK!
# asking for json
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/posts
//OK!

2.
Get a specific post by its id
curl -v http://localhost:8080/skyline_rest/rs/posts/{idNummer}
//OK!

# asking for json
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/posts/{idNummer}
//OK!

# *** POST (create) ***
curl -v -X POST http://localhost:8080/skyline_rest/rs/posts/ --data "title=Post Title example&bodyText=This is a text. Bla bla bla...&PostVideo=www.video.com"
//OK!

# *** DELETE (delete) ***
curl -v -X DELETE http://localhost:8080/skyline_rest/rs/posts/{idNumber}
//OK!

# *** PUT (update) ***
# Sending JSON, probably need other id last
curl -v -X PUT http://localhost:8080/skyline_rest/rs/posts/{idNumber} --data "title=Updated Title&bodyText=updated text"
//OK!
(optional add on: &PostVideo=null)

# Query parameters. NOTE: Must quote URI. Will get list (with possible 0 elements)
curl -v -H "Accept: application/json" "http://localhost:8080/skyline_rest/rs/posts/range?first=0&last=2"
OK!

# Get primitive type
curl -v http://localhost:8080/skyline_rest/rs/posts/count
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/posts/count
//OK!

# get all post by a member
curl -v -H "Accept: application/json" "http://localhost:8080/skyline_rest/rs/posts/postByMember?memberId={memberId}"


---------------------------------------------------------------------------------------------------------------------

cURL-tests for the HTTP-calls to the blog-model (via MemberResource) 

1.
Getting all members
curl -v http://localhost:8080/skyline_rest/rs/members
//OK!
# asking for json
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/members

2.
Get a specific member by its id
curl -v http://localhost:8080/skyline_rest/rs/members/{idNummer}

# asking for json
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/members/{idNummer}

3.
# *** POST (create) ***
curl -v -X POST http://localhost:8080/skyline_rest/rs/members/ --data "name=newMember"

4.
    # *** DELETE (delete) ***
curl -v -X DELETE http://localhost:8080/skyline_rest/rs/members/{idNumber}

5.
# *** PUT (update) ***
# Sending JSON, probably need other id last
curl -v -X PUT http://localhost:8080/skyline_rest/rs/members/{idNumber} --data "name=changedName"

6.
# Query parameters. NOTE: Must quote URI. Will get list (with possible 0 elements)
curl -v -H "Accept: application/json" "http://localhost:8080/skyline_rest/rs/members/range?first=0&last=2"

7.
# Get primitive type
curl -v http://localhost:8080/skyline_rest/rs/members/count
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/members/count

8.
# Query parameters. NOTE: Must quote URI. Will get list (with possible 0 elements)
curl -v -H "Accept: application/json" "http://localhost:8080/skyline_rest/rs/members/favoriteMembers?memberId={memberId}"

9.

# Query parameters. NOTE: Must quote URI. Will get list (with possible 0 elements)
curl -v -H "Accept: application/json" "http://localhost:8080/skyline_rest/rs/members/commonFavoriteMembers?memberId={memberId}&memberId2={memberId}"


#_______________________________________________
# Comments

1.
Getting all comments
curl -v http://localhost:8080/skyline_rest/rs/posts/comments
//OK!
# asking for json
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/posts/comments

2.
Get a specific comment by its id
curl -v http://localhost:8080/skyline_rest/rs/posts/comments{idNummer}

# asking for json
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/posts/comments/{idNummer}

3.
# *** POST (create) ***
curl -v -X POST http://localhost:8080/skyline_rest/rs/posts/comments/?authorID={authorid}&postId={postid} --data "text=Jensa, wat do jah do bratta?"

4.
    # *** DELETE (delete) ***
curl -v -X DELETE http://localhost:8080/skyline_rest/rs/posts/comments/{idNumber}

5.
# *** PUT (update) ***
# Sending JSON, probably need other id last
curl -v -X PUT http://localhost:8080/skyline_rest/rs/posts/comments/{idNumber} --data "text=altered comment"

6.
# Query parameters. NOTE: Must quote URI. Will get list (with possible 0 elements)
curl -v -H "Accept: application/json" "http://localhost:8080/skyline_rest/rs/posts/comments/range?first=0&last=2"

7.
# Get primitive type
curl -v http://localhost:8080/skyline_rest/rs/posts/comments/count
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/posts/comments/count

8. 
# Get all comments on post

curl -v http://localhost:8080/skyline_rest/rs/posts/comments/?postId={postId}
curl -v -H "Accept: application/json" http://localhost:8080/skyline_rest/rs/posts/comments/?postId={postId}
